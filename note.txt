import { connectionStr } from "../../../../lib/mongo";
import { Product } from "../../../../models/product";
import mongoose from "mongoose";
import { NextResponse } from "next/server";

// // Assuming you're using Next.js API routes

// export async function GET(req) {
//   const {
//     method,
//     query: { id },
//   } = req;
//   let data = null;

//   if (method === "GET" && id) {
//     try {
//       await mongoose.connect(connectionStr);
//       data = await Product.findById(id);

//       if (!data) {
//         return NextResponse.json({ success: false, error: "Item not found" });
//       }
//     } catch (err) {
//       data = { success: false, error: err.message };
//     } finally {
//       await mongoose.disconnect(); // Close the database connection
//     }
//   }

//   return NextResponse.json({ result: data });
// }

export async function GETById(req, { params }) {
  const { method } = req;
  const { id } = params;
  let data = null;
  console.log(id);
  if (method === "GET" && id) {
    try {
      await mongoose.connect(connectionStr);
      data = await Product.findOne({ _id: id });
      console.log(data);

      if (!data) {
        return NextResponse.json({ success: false, error: "Item not found" });
      }
    } catch (err) {
      data = { success: false, error: err.message };
    } finally {
      await mongoose.disconnect();
    }
  }

  return NextResponse.json({ result: data });
}



// export async function PUT(req) {
//   console.log(req);
//   const {
//     method,
//     query: { id },
//   } = req;
//   const payload = await req.json();

//   if (method === "PUT") {
//     try {
//       await mongoose.connect(connectionStr);
//       let product = new Product(payload);
//       const result = await product.save();
//       return NextResponse.json({ message: result });
//     } catch (err) {
//       return NextResponse.json({ error: err.message });
//     }
//   }
// }

// export async function DELETE(req) {
//   console.log(req);
//   const { method } = req;
//   const payload = await req.json();

//   if (method === "DELETE") {
//     try {
//       await mongoose.connect(connectionStr);
//       let product = new Product(payload);
//       const result = await product.DELETE();
//       return NextResponse.json({ message: result });
//     } catch (err) {
//       return NextResponse.json({ error: err.message });
//     }
//   }
// }
